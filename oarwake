#!/bin/bash

##########
# This script 'wakes up' a hold job
# whose id is in a file when another
# job completes.
#
# To use with the 'oarhold' script
#
# (c) Guillaume-Jean Herbiet - 2011
#     guillaume-jean@herbiet.net
#
##########

#
# Set this to meaningful values
#

JOBS_FILE="/path/to/jobs.txt"
JOBS_LOCK_FILE="/path/to/jobs.lck"
JOBS_LOG_FILE="/path/to/jobs.log"

##########
# Don't touch this

# Wait for the job END event
if [ $3 == "END" ]; then

	echo `date` $@ >> "$JOBS_LOG_FILE"

	# Prevent concurrent fetch of a job
	while [ -e "$JOBS_LOCK_FILE" ]; do
		sleep $[ ( $RANDOM % 60 )  + 1 ]s
	done

	# Lock the job file and resume the next job
	touch "$JOBS_LOCK_FILE"
	if [ -s "$JOBS_FILE" ]; then
		NEXT_JOB=`head -n 1 "$JOBS_FILE"`
		oarresume $NEXT_JOB
		echo `date` $1 "resumed" $NEXT_JOB >> "$JOBS_LOG_FILE"
		sed -i 1d "$JOBS_FILE"
	else
		# In some cases, some jobs may remain. Execute them
		NEXT_JOB=$(oarstat | grep "`whoami`" | grep " H " | cut -d " " -f 1)
		if [ ! -z $NEXT_JOB ]; then
			oarresume $NEXT_JOB
			echo `date` "oarstat resumed" $NEXT_JOB >> "$JOBS_LOG_FILE"
		fi
	fi
	rm -f "$JOBS_LOCK_FILE"
fi

# EOF
##########
